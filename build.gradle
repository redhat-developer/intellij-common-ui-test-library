plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'io.codearte.nexus-staging' version "0.22.0"
}

group 'com.redhat.devtools.intellij.commonUiTestLibrary'
version projectVersion

apply plugin: 'maven'

def remoteRobotVersion = '0.11.4'
def fixturesVersion = '1.1.18'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://packages.jetbrains.team/maven/p/ij/intellij-dependencies'
    }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.3.72'
    api 'commons-io:commons-io:2.4'
    api 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    api 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    api "com.intellij.remoterobot:remote-robot:$remoteRobotVersion"
    api "com.intellij.remoterobot:remote-fixtures:$fixturesVersion"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                from components.java

                name = 'IntelliJ common UI test library'
                description = 'Common utilities for IntelliJ UI testing'
                url = 'https://github.com/redhat-developer/intellij-common-ui-test-library'

                licenses {
                    license {
                        name = 'Eclipse Public License 2.0'
                        url = 'https://www.eclipse.org/legal/epl-v20.html'
                    }
                }
                developers {
                    developer {
                        name = 'Red Hat Developer'
                        email = 'developers@redhat.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/redhat-developer/intellij-common-ui-test-library.git'
                    developerConnection = 'scm:git:ssh://git@github.com:redhat-developer/intellij-common-ui-test-library.git'
                    url = 'https://github.com/redhat-developer/intellij-common-ui-test-library/'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://repository.jboss.org/nexus/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://repository.jboss.org/nexus/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = nexusUser
                password = nexusPassword
            }
        }
    }
}